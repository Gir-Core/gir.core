{{-
func has_parent
    ret parent && (string.size parent) > 0
end 

func get_if_parent
    if has_parent
        ret $0 #': ' + parent
    end
    ret ''
end

func write_inheritance
    if has_parent
        implements_without_atk = array.insert_at implements_without_atk 0 parent
    end
    
    if (implements_without_atk | array.size) > 0
        ': ' + (array.join implements_without_atk ', ')
    else
        ''
    end
end

-}}

using System;
using GObject;
using System.Runtime.InteropServices;

#nullable enable

namespace {{ namespace }}
{
    // AUTOGENERATED FILE - DO NOT MODIFY
    
    public partial class {{ name }} {{ write_inheritance }}
    {
{{if !fundamental}}
        internal protected static{{' new'|get_if_parent}} readonly TypeDescriptor GTypeDescriptor = TypeDescriptor.For("{{ type_name }}", {{ name }}.Native.get_type);
        
        #region Properties
{{~ for property in properties
    #include 'property.sbntxt' property
end ~}}
        #endregion

        #region Signals
        
        {{ if signals_have_event_args }}
        ///<summary>
        /// Indexer to connect with an SignalHandler<{{name}}>
        ///</summary>
        public SignalHandler<{{ name }}> this[Signal<{{ name }}> signal]
        {
            set => signal.Connect(this, value, true);
        }
        {{ end }}
        
{{~ for signal in signals
    include 'signal.sbntxt' signal
end ~}}

        #endregion

        {{if has_parent}} 
        #region Constructors
        protected internal {{ name }}(IntPtr ptr) : base(ptr) {}
        protected internal {{ name }}(params ConstructParameter[] properties) : base(properties) {}
        #endregion
        {{ end }}
        
        #region Methods
        protected static{{' new'|get_if_parent}} class Native
        {
{{if (string.size get_type_function) > 0 }}
        [DllImport("{{ dll_import }}", EntryPoint = "{{ get_type_function }}")]
        public static extern ulong get_type();
{{ end
else }}

        #region Native
        protected static{{' new'|get_if_parent}} class Native
        {
{{ end }}

        #region Properties
{{ for property in properties
    include 'native_property.sbntxt' property
end }}
        #endregion
        
        #region Methods
{{for method in all_methods
    include 'method.sbntxt' method
end }}
        #endregion
        }
        #endregion
    }
}
